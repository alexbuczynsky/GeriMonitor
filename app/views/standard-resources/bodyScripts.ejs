<script src="/js/vendor/jquery-2.1.4.min.js"></script>
<script src="/js/popper.min.js"></script>
<script src="/js/plugins.js"></script>
<script src="/js/main.js"></script>


<script src="/js/lib/chart-js/Chart.bundle.js"></script>
<script src="/js/dashboard.js"></script>
<script src="/js/widgets.js"></script>
<script src="/js/lib/vector-map/jquery.vmap.js"></script>
<script src="/js/lib/vector-map/jquery.vmap.min.js"></script>
<script src="/js/lib/vector-map/jquery.vmap.sampledata.js"></script>
<script src="/js/lib/vector-map/country/jquery.vmap.world.js"></script>

<script>
    var socketIO = io();
    const templateNotif = `
    <div data-notify="container" class="col-xs-11 col-md-4 col-sm-5 col-lg-3 alert alert-{0}" role="alert">
      <div style = "position:absolute; top: 5px;right: 5px;">
        <button type="button" aria-hidden="true" class="close pull-right" data-notify="dismiss">×</button>
      </div>
      <div style="vertical-align: top; display:inline-block; width:20%;">
        <img data-notify="icon">
      </div>
      <div style="vertical-align: top;display:inline-block;width:75%;top:0px;">
        <div data-notify="title">{1}</div>
        <div data-notify="message">{2}</div>
      </div>
    </div>`;

    const connectionStatusTemplate = `
    <div data-notify="container" class="col-xs-11 col-sm-3 alert alert-{0}" role="alert">
        <div class="row">
          <div class="col-xs-10 col-sm-10 pull-left">
            <span data-notify="title">{1}</span>
          </div>
          <div class="col-xs-2 col-sm-1 pull-right">
            <button type="button" aria-hidden="true" class="close" data-notify="dismiss">×</button><span data-notify="icon">
          </div>
        </div>
        <div class="row">
          <div class="col-xs-12 pull-left">
            <span data-notify="message">{2}</span>
          </div>
        </div>
        <div class="row">
          <div class="col-xs-12 pull-left">
            <div class="progress" data-notify="progressbar" style="margin: 0 0 0 0;">
              <div class="progress-bar progress-bar-striped active progress-bar-danger progress-bar-{0}" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
          </div>
        </div>
    </div>`;
    var generalNotifSettings = {
      icon_type: 'image',
      type: "pastel-info",
      allow_dismiss: true,
      animate: {
        enter: 'animated fadeInRight',
        exit: 'animated fadeOutLeft'
      },
      url_target: '_blank',
      delay: 10e3,
      template: templateNotif
    };
    socketIO.on('disconnect', () => {
      console.log('disconnected!!')
      let content = {
      	message: `Server lost connection ${moment().tz(moment.tz.guess()).format('hh:mm:ss A z')}`,
        title: `Server Disconnected`
      };
      let settings = {
        type: 'pastel-danger',
        allow_dismiss: false,
        showProgressbar: true,
        animate: {
          enter: 'animated fadeInDownBig',
          exit: 'animated fadeOutUpBig'
        },
        placement: {
      		from: "top",
      		align: "center"
      	},
        onShown: waitForConnection(),
        onClosed: ()=> {
          const keepNotificationOpen = 10e3;
          const serverOnlineMsg = `Server online at ${moment().tz(moment.tz.guess()).format('hh:mm:ss A z')}`;
          let content = {
            message: serverOnlineMsg,
            title: `Server Back Online`
          };
          let settings = {
            type: 'pastel-success',
            allow_dismiss: true,
            animate: {
              enter: 'animated fadeInDownBig',
              exit: 'animated fadeOutUpBig'
            },
            placement: {
              from: "top",
              align: "center"
            },
            url_target: '_blank',
            delay: keepNotificationOpen,
            template: connectionStatusTemplate
          };
          let connectedNotification = $.notify(content,settings)
          var counter = keepNotificationOpen/1000;
          var closeNotifCountdown = setInterval(() => {
            connectedNotification.update('message',serverOnlineMsg + ` (closing in ${counter})`)
            counter--;
          },1000)
          setTimeout(clearInterval(closeNotifCountdown),keepNotificationOpen)
        },
        url_target: '_blank',
        delay: 0,
        template: connectionStatusTemplate
      };
      disconnectMessage = $.notify(content,settings);
    })
    socketIO.on('reconnect_attempt', function(){
      var counter = 0;
      var progressBar = setInterval( () => {
        if(counter == 100){
          clearInterval(progressBar)
        };
        disconnectMessage.update({
          'message':'Trying to reconnect...',
          'progress': counter
        })
        counter+=25
      },500)

    })

    var waitForConnection = function(){
      socketIO.once('connect', () => {
        console.log('connected!!')
        disconnectMessage.close()
      })
    }


    socketIO.on('deviceOnline', function(msg){
      let info = JSON.parse(msg);
      let device = info.device;
      let content = {
      	icon: `../media/devices/notificationIcons/${device.type}.png`,
      	message: info.message,
        title: info.title
      };
      let settings = generalNotifSettings;
      settings.type = 'pastel-success';
      $.notify(content,settings)
    })

    socketIO.on('motionDetected', function(msg){
      let info = JSON.parse(msg);
      let device = info.device;
      let content = {
      	icon: `../images/cameraIcon.png`,
      	message: info.message,
        title: info.title
      };
      let settings = generalNotifSettings;
      settings.type = 'pastel-warning';
      $.notify(content,settings)
    })

    socketIO.on('deviceOffline', function(msg){
      let info = JSON.parse(msg);
      let device = info.device;
      let content = {
      	icon: `../media/devices/notificationIcons/${device.type}.png`,
      	message: info.message,
        title: info.title
      };
      let settings = generalNotifSettings;
      settings.type = 'pastel-danger';
      $.notify(content,settings)
    })

    socketIO.on('error', function(err){
      let content = {
      	message: err,
        title: 'APP ERROR'
      };
      let settings = generalNotifSettings;
      settings.type = 'pastel-danger';
      $.notify(content,settings)
    })
</script>